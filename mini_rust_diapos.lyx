#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble

\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding iso8859-15
\fontencoding T1
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 2
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Mini introduction to Rust
\end_layout

\begin_layout Author
Philippe Helluy
\end_layout

\begin_layout Institute
Universit√© de Strasbourg, IRMA CNRS, Inria Tonus
\end_layout

\begin_layout Section
A simple transport solver in Rust
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status collapsed

\begin_layout Plain Layout
What is Rust ?
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Rust (
\begin_inset Quotes eld
\end_inset

rouille
\begin_inset Quotes erd
\end_inset

 in French) is a programming language created in 2009, using only old (rusty),
 but robust ideas.
 Some features, compared to C, C++ and Python, are: 
\end_layout

\begin_layout Itemize
no memory leak or segfault, generally guaranteed at compile time; 
\end_layout

\begin_layout Itemize
no race conditions, generally guaranteed at compile time; 
\end_layout

\begin_layout Itemize
strict ownership system, fast executable; 
\end_layout

\begin_layout Itemize
Cargo, which replaces cmake, doxygen, ctest, anaconda, etc.
 in a single utility.
 
\end_layout

\begin_layout Itemize
\begin_inset Quotes qld
\end_inset

most loved programming language
\begin_inset Quotes qrd
\end_inset

 in the Stack Overflow Developer Survey every year since 2016.
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 3
status open

\begin_layout Plain Layout
fragile
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
Installing Rust
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Rust install with the command
\end_layout

\begin_layout Standard

\lang french
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily}"
inline true
status open

\begin_layout Plain Layout

curl -$
\backslash
,$-proto '=https' -$
\backslash
,$-tlsv1.2 -sSf https://sh.rustup.rs | sh
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Create a new project
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily}"
inline false
status open

\begin_layout Plain Layout
cargo new bonjour; cd bonjour
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Compilation and execution
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily}"
inline false
status open

\begin_layout Plain Layout
cargo run
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Cargo is the package and compilation manager of Rust.
 The compiler is rustc.
\end_layout

\begin_layout Itemize
The source code is in src.
 Here there is a single file main.rs.
 
\end_layout

\begin_layout Itemize
The file Cargo.toml is an important config file.
 It describes the list of external libs that will be automatically downloaded
 by Cargo.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status collapsed

\begin_layout Plain Layout
Downwind algorithm
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
The scheme seems to be implicit, but it is actually explicit.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename ../patapon/mhd/doc/img_beamer/downwind_graph.png
	lyxscale 50
	width 60text%

\end_inset

 
\end_layout

\begin_layout Itemize
The solution can be explicitly computed by following a topological ordering
 of a Direct Acyclic Graph (DAG), e.g.
 3, 7, 0, 15, 1, etc.
 
\end_layout

\begin_layout Itemize
In addition there is parallelism: (3,7) can be computed in parallel, then
 (0,15,1) can be computed in parallel, etc.
 
\end_layout

\begin_layout Itemize
Low storage: the solution can be replaced in memory during the computations.
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status collapsed

\begin_layout Plain Layout
Rust implementation
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
We have implemented the downwind algorithm in Rust: 
\end_layout

\begin_layout Itemize
Recent programming language (2010) oriented towards concision, speed and
 security.
 
\end_layout

\begin_layout Itemize
Most common bugs are avoided at compile time: memory leaks and segfaults,
 uninitialized data, race conditions.
 
\end_layout

\begin_layout Itemize
Automatic parallelization tools: if the sequential code works, the parallel
 version is guaranteed to be correct.
 
\end_layout

\begin_layout Itemize
Fast.
 More details in 
\begin_inset CommandInset citation
LatexCommand cite
key "gerhard:hal-03218086"
literal "false"

\end_inset

.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename ../patapon/mhd/doc/img_beamer/speedup_mem.png
	width 80text%

\end_inset

 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status collapsed

\begin_layout Plain Layout
Numerical results
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Maxwell's equation: 
\begin_inset Formula $W=(E^{T},H^{T})^{T},$
\end_inset

 with electric field 
\begin_inset Formula $E\in\mathbb{R}^{3}$
\end_inset

 and magnetic field 
\begin_inset Formula $H\in\mathbb{R}^{3}$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Maxwell flux: 
\begin_inset Formula 
\[
Q(W,N)=\left(\begin{array}{c}
-N\times H\\
N\times E
\end{array}\right).
\]

\end_inset

.
 
\end_layout

\begin_layout Itemize
Unstructured mesh of the unit cube made with large and small cells 
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename ../patapon/mhd/doc/img_beamer/mesh_refined.png
	width 80text%

\end_inset

 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status collapsed

\begin_layout Plain Layout
Numerical results
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
We compute a plane wave on the above mesh.
 
\end_layout

\begin_layout Itemize
We check second order accuracy and the CFL-less feature 
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename ../patapon/mhd/doc/img_beamer/wave_cfl.png
	lyxscale 50
	width 80text%

\end_inset

 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status collapsed

\begin_layout Plain Layout
Conclusion
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
The kinetic approach is a generalization of the LBM: 
\end_layout

\begin_layout Itemize
Can handle arbitrary Mach flows.
 
\end_layout

\begin_layout Itemize
Very fast computations on Cartesian grids.
 
\end_layout

\begin_layout Itemize
Construction of CFL-free explicit DG scheme on unstructured meshes.
 
\end_layout

\begin_layout Itemize
Equivalent equation: useful theoretical tool (stability analysis, boundary
 conditions, behavior of hidden variables).
 
\end_layout

\begin_layout Standard
Future works: boundary conditions, better parallelism (IMEX approach), other
 applications (cavitation).
 
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 3
status collapsed

\begin_layout Plain Layout
allowframebreaks
\end_layout

\end_inset


\begin_inset Argument 4
status collapsed

\begin_layout Plain Layout
Bibliography
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Standard

\size tiny
 
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "../patapon/mhd/doc/spring_mhd_lbm"
options "alpha"

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\end_body
\end_document
